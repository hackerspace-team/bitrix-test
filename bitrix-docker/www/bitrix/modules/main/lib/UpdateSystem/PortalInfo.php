<? namespace Bitrix\Main\UpdateSystem;$GLOBALS['____1404691709']= array(base64_decode('Z'.'n'.'V'.'uY3Rpb25fZXhpc3'.'Rz'),base64_decode(''.'ZGVmaW5lZA=='),base64_decode(''.'cGhwdmV'.'yc2lvbg=='),base64_decode('Y2xhc3NfZXhpc3Rz'));if(!function_exists(__NAMESPACE__.'\\___868469445')){function ___868469445($_1571347865){static $_1272370667= false; if($_1272370667 == false) $_1272370667=array('TEl'.'DRU5'.'TR'.'V9LRV'.'k=','b'.'GFuZw='.'=','d'.'XRm','WQ='.'=','c3R'.'hYmx'.'l',''.'bWF'.'pbg==',''.'c3RhYmxlX3'.'ZlcnN'.'pb25'.'zX29u'.'bHk=','WQ==','Q0FOR'.'1pJUA==',''.'Z'.'3pj'.'b21wcm'.'Vzc'.'w==','WQ==',''.'Tg==',''.'U1VQRF9EQlM=','W'.'EU=','WQ==','T'.'g==','U'.'1VQRF9VUlM'.'=','Q0'.'xJRU5U'.'X1N'.'JVEU=','U0VS'.'VkVSX0'.'5BTUU=',''.'c'.'3Bk','bW'.'Fp'.'bg==','Y3Jj'.'X2NvZGU=','','Z'.'GJ2','U1VQ'.'RF9WRVI=','V'.'V'.'BEQVRFX'.'1NZU1RFTV9WRV'.'JT'.'SU9'.'OX'.'0E=','','U1'.'VQ'.'RF9T'.'Ul'.'M=','UlU'.'=','U1VQRF9DTVA=','T'.'g==','U1'.'VQRF'.'9TVFM=',''.'Uk'.'E=','T'.'ElD'.'RU5TR'.'V9TSUdORUQ=',''.'Q0x'.'JRU5U'.'X'.'1B'.'IUFZ'.'FUg==','Tk'.'dJTlg=','b'.'WFpbg==','dXBkYXR'.'lX3VzZV9uZ2'.'lueA==',''.'WQ==','U'.'0'.'1'.'E',''.'bW'.'Fpbg==','dXBk'.'YX'.'R'.'l'.'X3NhZm'.'VfbW9kZQ==','Tg==','VkVSU0'.'lPT'.'g'.'==','V'.'FlQRU5D','Q0hIQg'.'='.'=','SF'.'RUUF9I'.'T1NU','Q1'.'NBQ'.'g'.'==','U0VSV'.'kVS'.'X0FERFI=','U1VJR'.'A==','QVBQTElDQVRJT04'.'=','','Y2x1c3'.'Rlcg==','Q0NsdXN0Z'.'XI'.'=',''.'PU'.'FDVE'.'lWRQ='.'=','WQ==',''.'L2JpdHJpeC9tb2R1b'.'GVzL21haW4vY2'.'xh'.'c3N'.'lcy9nZW5lcm'.'FsL3V'.'wZGF0'.'Z'.'V9jbGllbn'.'Qu'.'cGhw','LQ==','bW'.'Fpbg==','T'.'g'.'==','RA==','RQ==',''.'VA==','Rg==','L2'.'JpdH'.'Jpe'.'C'.'9tb2'.'R1b'.'G'.'Vz'.'L21'.'haW4vY2xh'.'c3Nlc'.'y9n'.'ZW5'.'lcmFsL3'.'V'.'wZGF'.'0ZV9j'.'b'.'Gllbn'.'Quc'.'Ghw','','L2JpdH'.'JpeC9tb2R1'.'b'.'GVz'.'L21'.'haW4'.'vY2x'.'hc3'.'N'.'lcy'.'9nZW'.'5lcmFsL3VwZGF0Z'.'V9jbGllbnQucGh'.'w','');return base64_decode($_1272370667[$_1571347865]);}}; use Bitrix\Main\Application; use Bitrix\Main\License; use Bitrix\Main\Loader; use Bitrix\Main\SystemException; use Bitrix\Main\SiteTable; class PortalInfo{ private License $_1692165712; public function __construct(){ $this->_1692165712= Application::getInstance()->getLicense();} public function common(): array{ global $DB; return[ ___868469445(0) => $this->_1692165712->getHashLicenseKey(), ___868469445(1) => LANGUAGE_ID, ___868469445(2) => ___868469445(3), ___868469445(4) => \COption::GetOptionString(___868469445(5), ___868469445(6), ___868469445(7)), ___868469445(8) => $GLOBALS['____1404691709'][0](___868469445(9))? ___868469445(10): ___868469445(11), ___868469445(12) => $DB->type, ___868469445(13) =>(isset($DB->_1328473472) && $DB->_1328473472)? ___868469445(14): ___868469445(15), ___868469445(16) => $this->_1692165712->getActiveUsersCount(), ___868469445(17) => $_SERVER[___868469445(18)], ___868469445(19) => \COption::GetOptionString(___868469445(20), ___868469445(21), ___868469445(22)), ___868469445(23) => $this->__1976798495(), ___868469445(24) => $GLOBALS['____1404691709'][1](___868469445(25))? UPDATE_SYSTEM_VERSION_A: ___868469445(26), ___868469445(27) => $this->__1229149845() ?? ___868469445(28), ___868469445(29) => ___868469445(30), ___868469445(31) => $this->__1524900774() ?? ___868469445(32), ___868469445(33) => $this->__1587651256(), ___868469445(34) => $GLOBALS['____1404691709'][2](), ___868469445(35) => \COption::GetOptionString(___868469445(36), ___868469445(37), ___868469445(38)), ___868469445(39) => \COption::GetOptionString(___868469445(40), ___868469445(41), ___868469445(42)), ___868469445(43) => SM_VERSION, ___868469445(44) => $this->getLicenseType(), ___868469445(45) => $_SERVER[___868469445(46)], ___868469445(47) => $_SERVER[___868469445(48)], ___868469445(49) => $GLOBALS[___868469445(50)]->GetServerUniqID(),];} private function __1976798495(): string{ global $DB; $_1942481865= $DB->GetVersion(); return $_1942481865 !== false? $_1942481865: ___868469445(51);} private function __1229149845():?int{ if(Loader::includeModule(___868469445(52)) && $GLOBALS['____1404691709'][3](___868469445(53))){ return \CCluster::getServersCount();} return null;} private function __1524900774():?int{ return SiteTable::getCount([___868469445(54) => ___868469445(55)]);} private function __1587651256(): string{ require_once(Application::getDocumentRoot(). ___868469445(56)); $_442596176= \CUpdateClient::getNewLicenseSignedKey(); return $_442596176.___868469445(57).\COption::GetOptionString(___868469445(58), $_442596176, ___868469445(59));} public function getLicenseType(): string{ if($this->_1692165712->isDemo()){ return ___868469445(60);} elseif($this->_1692165712->isEncoded()){ return ___868469445(61);} elseif($this->_1692165712->isTimeBound()){ return ___868469445(62);} else{ return ___868469445(63);}} public function getModules(): array{ require_once(Application::getDocumentRoot(). ___868469445(64)); $_890962934= ___868469445(65); $_470641648= \CUpdateClient::GetCurrentModules($_890962934); $_2027672280=(\CUpdateExpertMode::isEnabled() && \CUpdateExpertMode::isCorrectModulesStructure([])); if($_2027672280){ $_470641648= \CUpdateExpertMode::processModulesFrom([], $_470641648);} if(!empty($_890962934)){ throw new SystemException($_890962934);} return $_470641648;} public function getLanguages(): array{ require_once(Application::getDocumentRoot(). ___868469445(66)); $_890962934= ___868469445(67); $_1417378603= \CUpdateClient::GetCurrentLanguages($_890962934); if(!empty($_890962934)){ throw new SystemException($_890962934);} return $_1417378603;}}?>