<? namespace Bitrix\Main\Security\W;$GLOBALS['____262673271']= array(base64_decode(''.'dG'.'ltZQ=='),base64_decode(''.'dGltZ'.'Q'.'=='),base64_decode('an'.'Nvbl'.'9'.'kZWNvZGU='),base64_decode('YXJyY'.'Xlf'.'b'.'WVyZ2U='),base64_decode('am'.'9'.'p'.'bg='.'='),base64_decode('am9p'.'b'.'g'.'=='),base64_decode('am9pbg=='),base64_decode(''.'YXJy'.'YXl'.'fcG9w'),base64_decode('YXJy'.'Y'.'X'.'lfc'.'2hp'.'ZnQ='),base64_decode(''.'YXJyYXlf'.'c2hp'.'Z'.'nQ='),base64_decode(''.'YXJyYXlfc2'.'hpZnQ='),base64_decode('YXJ'.'y'.'YXlfc2hpZnQ='),base64_decode('YXJyYXl'.'f'.'b'.'W'.'Vy'.'Z2U='),base64_decode('a'.'XNfYXJ'.'yYXk='),base64_decode('YXJyYX'.'lfbWVyZ'.'2'.'U'.'='),base64_decode('a'.'W5f'.'YXJyYXk='),base64_decode('aW5f'.'YX'.'Jy'.'YXk'.'='),base64_decode('aW5f'.'YXJyY'.'Xk='),base64_decode('aW'.'5fYXJy'.'YXk='),base64_decode('aW5'.'fY'.'X'.'JyYXk='),base64_decode('dG'.'ltZQ='.'='),base64_decode('dG'.'l'.'t'.'ZQ=='),base64_decode('YXJyYXlfb'.'WF'.'w'),base64_decode(''.'anN'.'vbl9lbmNvZGU'.'='),base64_decode(''.'anNv'.'bl9'.'l'.'bmN'.'vZ'.'GU='),base64_decode('am'.'9pbg=='));if(!function_exists(__NAMESPACE__.'\\___1154059762')){function ___1154059762($_235471017){static $_1664448622= false; if($_1664448622 == false) $_1664448622=array('V1dBTExf'.'TE9'.'DSw='.'=',''.'c'.'2V'.'jdX'.'Jp'.'d'.'H'.'k=',''.'Y2'.'Fja'.'GU'.'=',''.'dHRs','RE'.'FUQQ='.'=','eyI=','V1'.'dBTEx'.'fTE9DSw==','c2Vj'.'dXJpdH'.'k=','U0VDVVJJVFlfV1dB'.'TExfRV'.'hDRVBUS'.'U9O','RkFJTF9'.'DSE'.'VD'.'S0l'.'ORw='.'=','Q2FuIG'.'5vdCBleG'.'Vj'.'dXRlI'.'Hd3'.'YWxsIHJ1bGVzOiA=',''.'IF'.'R'.'yYWNlOi'.'A=','U'.'kVRVUV'.'TVF9VUkk=','a2V5cw'.'==',''.'dmFs'.'dWVz','U0V'.'D'.'VVJ'.'JV'.'FlfV'.'1dBTEx'.'f'.'TU9ESUZZ','Lg==','U0'.'VDVVJJV'.'FlfV1dBT'.'ExfVU5TRVQ=','Lg==','U0'.'VD'.'VV'.'JJ'.'VFlfV1'.'dBT'.'Exf'.'R'.'VhJ'.'VA'.'='.'=','Lg==','Z'.'2xv'.'YmF'.'s','a2V5'.'cw==','dmFsdWVz','Z2V0','Z2V0','cG9zdA'.'='.'=','cG9'.'zdA='.'=','Y29va2l'.'l',''.'Y29v'.'a2ll',''.'cmVx'.'dW'.'Vz'.'dA='.'=','c'.'mV'.'xd'.'WVzdA==','Z'.'2xvYmF'.'s','Z2xvYmFs','bWFp'.'bl9zZW'.'M=','V1dBTExf'.'Q'.'U'.'NUVUFMSVpFX'.'1'.'JVTE'.'V'.'T','d'.'g==','dmVyc2l'.'vbg==','aQ==',''.'a'.'XNJbnN0YW'.'xsZWQ'.'=','c2'.'9ja2V0VG'.'l'.'tZW91dA==','c3RyZWFtVGltZW9'.'1'.'dA==',''.'KCc=','ZGF0YQ'.'==',''.'Jyw'.'gJw==',''.'bW9kdWx'.'l','J'.'ywgJw==','b'.'W9kd'.'W'.'xl'.'X'.'3ZlcnN'.'p'.'b24=',''.'Jyk=','LCA=','U0V'.'DVVJJVF'.'lfV1dB'.'TExfRV'.'hD'.'RVBUSU9O','bWFpbg'.'='.'=','RkFJTF9SRUZSRVNISU5H',''.'Q2F'.'uIG'.'5v'.'dCBy'.'ZWZyZ'.'X'.'NoI'.'Hd3YWxsI'.'H'.'J'.'1b'.'GVzOi'.'A'.'=',''.'IF'.'RyYWNlOiA'.'=',''.'ZGF0YQ==','e'.'yI=','LS0tL'.'S1CRUdJTiBQ'.'V'.'UJ'.'MSUMg'.'S'.'0VZLS0t'.'LS0=','Ck1J'.'S'.'UJJ'.'akFOQmd'.'rcWhra'.'Uc5'.'dz'.'BCQVFFRkFBT0NBU'.'ThBTUlJQkNnS'.'0N'.'B'.'UUVBc'.'ThR'.'RTB'.'Ia'.'m1ISlVTd'.'Fd'.'WNm4wemE'.'KUl'.'ZvTHgwMk'.'t6Y'.'m'.'ZyYlMvU'.'D'.'Z'.'zV'.'2F4'.'VHp3O'.'F'.'N'.'l'.'R'.'1R0'.'Yl'.'RDT'.'3J'.'wSGk'.'1'.'UUY2T1J5a'.'lovWHh'.'6L0tM'.'VTFHYm9mOUNaMwo0ejd'.'Ta3FVdD'.'Y2aWJYdk9G'.'Qng'.'0Zn'.'cvQVB'.'QUkdE'.'cXRt'.'MG5E'.'M2Z'.'nR3N1'.'M1'.'J'.'lUG'.'d3'.'MjlpOCt2b'.'TdtdEJLSlVZb'.'DR'.'yClZwYjZzZ'.'lpF'.'VDlLRWI'.'2'.'VDFIRFl'.'tRXZj'.'MW'.'h'.'xL2'.'lp'.'dX'.'l4TH'.'J'.'aWmk1UT'.'ZVZmY0VUV'.'2VE'.'krNjhzc0ZSa1Erb3'.'dUUnkKZU9JT'.'WJGaE'.'0vV'.'VR'.'tZlZZY'.'lRSRn'.'kyb1VROF'.'dNemEybko1U2'.'F'.'o'.'emk'.'xV'.'UtPM'.'WpB'.'a'.'lhUU'.'FJy'.'emM3Q'.'Wp1NjM5'.'a'.'jFP'.'M'.'A'.'pwcHFmb'.'TV4Z1'.'dsRkFK'.'a0hRVGdiZGQ1Q'.'VdxREZR'.'a3Q'.'5SEtrWStUbmZCTEdWTX'.'ZWeVB3'.'VEh'.'OV1'.'FZQX'.'c'.'0eHBn'.'L3'.'dB'.'C'.'lp3SU'.'R'.'BUUF'.'CCi0t'.'LS0tRU5'.'EIFBVQ'.'kxJ'.'QyBLRVktLS0t'.'L'.'Q==');return base64_decode($_1664448622[$_235471017]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; class WWall{ const CACHE_RULES_TTL= 10800; private static $_173397716= 'https://wwall.bitrix.info/rules.php'; protected $_881741705= true; public function handle(){ try{  $_988861404= Cache::createInstance(); $_1517302765= false; if($_988861404->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_449936941= $_988861404->getVars(); if($GLOBALS['____262673271'][0]()- $_449936941> round(0+6.6666666666667+6.6666666666667+6.6666666666667)){  $_1888573738= Application::getConnection(); $_1139379272= RuleRecordTable::getTableName(); $_1888573738->truncateTable($_1139379272); RuleRecordTable::cleanCache(); $_988861404->clean(___1154059762(0), ___1154059762(1));}} elseif($_988861404->startDataCache()){  $_988861404->endDataCache($GLOBALS['____262673271'][1]()); $_1517302765= true;}  $_1569851203= RuleRecordTable::getList([ ___1154059762(2) =>[___1154059762(3) => round(0+720+720+720+720+720)* round(0+6+6+6+6)* round(0+1.4+1.4+1.4+1.4+1.4)]])->fetchAll(); foreach($_1569851203 as $_1141367847){ $_1804215873= new PublicKeyCipher; $_1422363133= $_1804215873->decrypt($_1141367847[___1154059762(4)], static::__1141722559()); if(!str_starts_with($_1422363133, ___1154059762(5))){ continue;} $_642895237= $GLOBALS['____262673271'][2]($_1422363133, true); if(!empty($_642895237)){ $_977090690= Rule::make($_642895237); $_99270820= $this->handleRule($_977090690); $this->applyHandlingResults($_99270820);}}  if($_1517302765){ $_988861404->clean(___1154059762(6), ___1154059762(7));}} catch(\Throwable $_2147443845){ $this->logEvent( ___1154059762(8), ___1154059762(9), ___1154059762(10). $_2147443845->getMessage(). ___1154059762(11). $_2147443845->getTraceAsString());}}  public function handleRule(Rule $_977090690): array{ $_99270820=[]; if($_977090690->matchPath($_SERVER[___1154059762(12)])){  $_799406606= $this->getContextElements($_977090690->getContext()); foreach($_799406606 as $_1642173294 => &$_1185661205){ $_99270820= $GLOBALS['____262673271'][3]($_99270820, $this->recursiveContextKeyHandle($_1642173294, $_1185661205,[], $_977090690));}} return $_99270820;}  public function applyHandlingResults(array $_99270820){ $_799406606= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_99270820 as $_1377910130){ $_1185661205=& $_799406606[$_1377910130->getContextName()]; $_658308785= $_1377910130->getRuleResult(); $_977090690= $_1377910130->getRule(); if($_658308785 instanceof ModifyResult){ if($_977090690->getProcess() === ___1154059762(13)){  static::rewriteContextKey( $_1377910130->getContextName(), $_1185661205, $_1377910130->getContextKey(), $_658308785->getCleanValue());} elseif($_977090690->getProcess() === ___1154059762(14)){ static::rewriteContextValue( $_1377910130->getContextName(), $_1185661205, $_1377910130->getContextKey(), $_658308785->getCleanValue());} $this->logEvent( ___1154059762(15), $_1377910130->getContextName(), $GLOBALS['____262673271'][4](___1154059762(16), $_1377910130->getContextKey()));} elseif($_658308785 instanceof CheckResult &&!$_658308785->isSuccess()){ if($_658308785->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_1377910130->getContextName(), $_1185661205, $_1377910130->getContextKey(),); $this->logEvent( ___1154059762(17), $_1377910130->getContextName(), $GLOBALS['____262673271'][5](___1154059762(18), $_1377910130->getContextKey()));} elseif($_658308785->getAction() === RuleAction::EXIT){ $this->logEvent( ___1154059762(19), $_1377910130->getContextName(), $GLOBALS['____262673271'][6](___1154059762(20), $_1377910130->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_881741705= false;} protected function rewriteContextKey($_1642173294, &$_1185661205, $_559595405, $_221065052){ $_196422874= $_559595405;  $GLOBALS['____262673271'][7]($_196422874); $_196422874[]= $_221065052; if($_1642173294 === ___1154059762(21)){ $_171645174= $GLOBALS['____262673271'][8]($_559595405); $GLOBALS['____262673271'][9]($_196422874); if(empty($_559595405)){ $GLOBALS[$_221065052]= $GLOBALS[$_171645174]; unset($GLOBALS[$_171645174]);} else{ $_1185661205=& $GLOBALS[$_171645174]; $_1462524775= ArrayHelper::getByNestedKey($_1185661205, $_559595405);  ArrayHelper::setByNestedKey($_1185661205, $_196422874, $_1462524775);  ArrayHelper::unsetByNestedKey($_1185661205, $_559595405);}} else{ $_1462524775= ArrayHelper::getByNestedKey($_1185661205, $_559595405);  ArrayHelper::setByNestedKey($_1185661205, $_196422874, $_1462524775);  ArrayHelper::unsetByNestedKey($_1185661205, $_559595405);}} protected function rewriteContextValue($_1642173294, &$_1185661205, $_81844601, $_1462524775){ if($_1642173294 === 'global'){ $_171645174= $GLOBALS['____262673271'][10]($_81844601); if(empty($_81844601)){ $GLOBALS[$_171645174]= $_1462524775;} else{ $_1185661205=& $GLOBALS[$_171645174]; ArrayHelper::setByNestedKey($_1185661205, $_81844601, $_1462524775);}} else{  ArrayHelper::setByNestedKey($_1185661205, $_81844601, $_1462524775);}} protected function unsetContextValue($_1642173294, &$_1185661205, $_81844601){ if($_1642173294 === 'global'){ $_171645174= $GLOBALS['____262673271'][11]($_81844601); if(empty($_81844601)){ unset($GLOBALS[$_171645174]);} else{ $_1185661205=& $GLOBALS[$_171645174]; ArrayHelper::unsetByNestedKey($_1185661205, $_81844601);}} else{ ArrayHelper::unsetByNestedKey($_1185661205, $_81844601);}}  protected function recursiveContextKeyHandle(string $_1642173294, array &$_1185661205, array $_573375310, Rule $_977090690): array{  $_99270820=[]; foreach($_1185661205 as $_100739173 => $_1462524775){ $_81844601= $GLOBALS['____262673271'][12]($_573375310,[$_100739173]); if($_977090690->matchKey($_81844601)){  if($_977090690->getProcess() === ___1154059762(22)){ $_658308785= $_977090690->evaluate($_100739173);} elseif($_977090690->getProcess() === ___1154059762(23)){ $_658308785= $_977090690->evaluateValue($_1462524775);}  if(!empty($_658308785) && $_658308785 instanceof RuleResult){ $_99270820[]= new HandlingResult($_1642173294, $_81844601, $_658308785, $_977090690);}}  if($GLOBALS['____262673271'][13]($_1462524775)){ $_99270820= $GLOBALS['____262673271'][14]($_99270820, $this->recursiveContextKeyHandle( $_1642173294, $_1185661205[$_100739173], $_81844601, $_977090690));}} return $_99270820;} protected function getContextElements(array $_676592163){ $_649417493=[]; if($GLOBALS['____262673271'][15](___1154059762(24), $_676592163, true)){ $_649417493[___1154059762(25)]= &$_GET;} if($GLOBALS['____262673271'][16](___1154059762(26), $_676592163, true)){ $_649417493[___1154059762(27)]= &$_POST;} if($GLOBALS['____262673271'][17](___1154059762(28), $_676592163, true)){ $_649417493[___1154059762(29)]= &$_COOKIE;} if($GLOBALS['____262673271'][18](___1154059762(30), $_676592163, true)){ $_649417493[___1154059762(31)]= &$_REQUEST;} if($GLOBALS['____262673271'][19](___1154059762(32), $_676592163, true)){ $_649417493[___1154059762(33)]= $GLOBALS;} return $_649417493;} public static function refreshRules(){ try{ $_509163792= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____262673271'][20]()- $_509163792)< static::CACHE_RULES_TTL){ return;} Option::set(___1154059762(34), ___1154059762(35), $GLOBALS['____262673271'][21]()); $_747592009= null;  $_828307353= $GLOBALS['____262673271'][22](function($_1247773527){ return[___1154059762(36) => $_1247773527[___1154059762(37)], ___1154059762(38) => (int) $_1247773527[___1154059762(39)]];}, ModuleManager::getModulesFromDisk());  $_2083747291= new HttpClient([ ___1154059762(40) => round(0+1+1+1+1+1), ___1154059762(41) => round(0+5)]); $_678468589= $_2083747291->post( static::$_173397716,[ 'modules' => $GLOBALS['____262673271'][23]($_828307353), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey()]); if($_2083747291->getStatus() == round(0+100+100) &&!empty($_678468589)){ $_747592009= Json::decode($_678468589);}  if($_747592009 !== null){ $_1888573738= Application::getConnection(); $_1139379272= RuleRecordTable::getTableName(); if(!empty($_747592009)){ foreach($_747592009 as $_365674724){ if(!static::checkRuleSign($_365674724)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____262673271'][24]($_365674724));}}}  $_1888573738->truncateTable($_1139379272);  if(!empty($_747592009)){ $_844239670=[]; foreach($_747592009 as $_365674724){ $_844239670[]= ___1154059762(42). $_1888573738->getSqlHelper()->forSql($_365674724[___1154059762(43)]). ___1154059762(44). $_1888573738->getSqlHelper()->forSql($_365674724[___1154059762(45)]). ___1154059762(46). $_1888573738->getSqlHelper()->forSql($_365674724[___1154059762(47)]). ___1154059762(48);} $_360243663= $GLOBALS['____262673271'][25](___1154059762(49), $_844239670);  $_1888573738->query("INSERT INTO {$_1139379272} (DATA, MODULE, MODULE_VERSION) VALUES {$_360243663}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_2147443845){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___1154059762(50), ___1154059762(51), ___1154059762(52), ___1154059762(53). $_2147443845->getMessage(). ___1154059762(54). $_2147443845->getTraceAsString());}} protected static function checkRuleSign($_977090690){ $_1804215873= new PublicKeyCipher; $_642895237= $_1804215873->decrypt($_977090690[___1154059762(55)], static::__1141722559()); return str_starts_with($_642895237, ___1154059762(56));} private static function __1141722559(){ $_1949818082= ''; $_1949818082 .= ___1154059762(57); $_1949818082 .= ___1154059762(58); return $_1949818082;} protected function logEvent($_1368382754, $_1008617176, $_969877234){ if($this->_881741705){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_1368382754, 'main', $_1008617176, $_969877234);}}}?>